Now I'm adding a list of numbers of threads

Call createSolverThreads, it creates the threads and gives them a startup function
which starts them on solving the puzzle for their given squares

when it comes time for the threads to recurse, currently they maintain single thread, they don't add
new threads

so now I can make it so that they actually do have new threads, so when they recurse they should
call createSolverThreads for the children and then join them. Use the same ThreadManager possible?

But then how do I reference it?

I create ThreadManager when I want to call createSolverThreads

The only member variable ThreadManager has is the mutex
We want all threads in all recursion levels to use the same mutex
But it's static, so they can all access it anyways, so access to the same mutex is possible
regardless of how many ThreadManager instances I create
If I call createSolverThreads multiple times, then I should probably move the mutex initialization and
destruction out of the function



pthreads


does threadManager contain the threads? or does it make them and hold them?

how to make and use threads:

create the threads, give them a function, they run, join the threads, and we're done
so we don't hold threads, we create them as needed

We need a function to create the threads which call the recursive solver
for each thread, create a puzzlesolver instance, and call the thread recursive solver

create 10 threads, automatically split up the grid as needed
run the solver using those threads, tell the thread manager to run the solver using the threads

make the solutions vector static, protect the vector when we're adding stuff using a lock


make a thread manager, gotta update include paths and makefile